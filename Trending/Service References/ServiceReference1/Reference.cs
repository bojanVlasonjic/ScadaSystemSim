//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trending.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tag", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.TagInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.DigitalInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.AnalogInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.TagOutput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.DigitalOutput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.AnalogOutput))]
    public partial class Tag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.ServiceReference1.Driver driverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string io_addressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.ServiceReference1.Driver driver {
            get {
                return this.driverField;
            }
            set {
                if ((object.ReferenceEquals(this.driverField, value) != true)) {
                    this.driverField = value;
                    this.RaisePropertyChanged("driver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string io_address {
            get {
                return this.io_addressField;
            }
            set {
                if ((object.ReferenceEquals(this.io_addressField, value) != true)) {
                    this.io_addressField = value;
                    this.RaisePropertyChanged("io_address");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Driver", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.RealTimeDriver))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.SimulationDriver))]
    public partial class Driver : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagInput", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.DigitalInput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.AnalogInput))]
    public partial class TagInput : Trending.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.ServiceReference1.Alarm[] alarmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.ServiceReference1.readType readField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Trending.ServiceReference1.scanType scanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scanTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.ServiceReference1.Alarm[] alarms {
            get {
                return this.alarmsField;
            }
            set {
                if ((object.ReferenceEquals(this.alarmsField, value) != true)) {
                    this.alarmsField = value;
                    this.RaisePropertyChanged("alarms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.ServiceReference1.readType read {
            get {
                return this.readField;
            }
            set {
                if ((this.readField.Equals(value) != true)) {
                    this.readField = value;
                    this.RaisePropertyChanged("read");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Trending.ServiceReference1.scanType scan {
            get {
                return this.scanField;
            }
            set {
                if ((this.scanField.Equals(value) != true)) {
                    this.scanField = value;
                    this.RaisePropertyChanged("scan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int scanTime {
            get {
                return this.scanTimeField;
            }
            set {
                if ((this.scanTimeField.Equals(value) != true)) {
                    this.scanTimeField = value;
                    this.RaisePropertyChanged("scanTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalInput", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class DigitalInput : Trending.ServiceReference1.TagInput {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalogInput", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class AnalogInput : Trending.ServiceReference1.TagInput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lowLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int highLimits {
            get {
                return this.highLimitsField;
            }
            set {
                if ((this.highLimitsField.Equals(value) != true)) {
                    this.highLimitsField = value;
                    this.RaisePropertyChanged("highLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lowLimits {
            get {
                return this.lowLimitsField;
            }
            set {
                if ((this.lowLimitsField.Equals(value) != true)) {
                    this.lowLimitsField = value;
                    this.RaisePropertyChanged("lowLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                if ((object.ReferenceEquals(this.unitsField, value) != true)) {
                    this.unitsField = value;
                    this.RaisePropertyChanged("units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagOutput", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.DigitalOutput))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Trending.ServiceReference1.AnalogOutput))]
    public partial class TagOutput : Trending.ServiceReference1.Tag {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int initialValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int initialValue {
            get {
                return this.initialValueField;
            }
            set {
                if ((this.initialValueField.Equals(value) != true)) {
                    this.initialValueField = value;
                    this.RaisePropertyChanged("initialValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalOutput", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class DigitalOutput : Trending.ServiceReference1.TagOutput {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalogOutput", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class AnalogOutput : Trending.ServiceReference1.TagOutput {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lowLimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string unitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int highLimits {
            get {
                return this.highLimitsField;
            }
            set {
                if ((this.highLimitsField.Equals(value) != true)) {
                    this.highLimitsField = value;
                    this.RaisePropertyChanged("highLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lowLimits {
            get {
                return this.lowLimitsField;
            }
            set {
                if ((this.lowLimitsField.Equals(value) != true)) {
                    this.lowLimitsField = value;
                    this.RaisePropertyChanged("lowLimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string units {
            get {
                return this.unitsField;
            }
            set {
                if ((object.ReferenceEquals(this.unitsField, value) != true)) {
                    this.unitsField = value;
                    this.RaisePropertyChanged("units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RealTimeDriver", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class RealTimeDriver : Trending.ServiceReference1.Driver {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> rtu_signalsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> rtu_signals {
            get {
                return this.rtu_signalsField;
            }
            set {
                if ((object.ReferenceEquals(this.rtu_signalsField, value) != true)) {
                    this.rtu_signalsField = value;
                    this.RaisePropertyChanged("rtu_signals");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimulationDriver", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class SimulationDriver : Trending.ServiceReference1.Driver {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> address_signalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double amplitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> signal_valuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> address_signals {
            get {
                return this.address_signalsField;
            }
            set {
                if ((object.ReferenceEquals(this.address_signalsField, value) != true)) {
                    this.address_signalsField = value;
                    this.RaisePropertyChanged("address_signals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double amplitude {
            get {
                return this.amplitudeField;
            }
            set {
                if ((this.amplitudeField.Equals(value) != true)) {
                    this.amplitudeField = value;
                    this.RaisePropertyChanged("amplitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> signal_values {
            get {
                return this.signal_valuesField;
            }
            set {
                if ((object.ReferenceEquals(this.signal_valuesField, value) != true)) {
                    this.signal_valuesField = value;
                    this.RaisePropertyChanged("signal_values");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Alarm", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    [System.SerializableAttribute()]
    public partial class Alarm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string alarmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime alarmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int highLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lowLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string tagIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string alarmID {
            get {
                return this.alarmIDField;
            }
            set {
                if ((object.ReferenceEquals(this.alarmIDField, value) != true)) {
                    this.alarmIDField = value;
                    this.RaisePropertyChanged("alarmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime alarmTime {
            get {
                return this.alarmTimeField;
            }
            set {
                if ((this.alarmTimeField.Equals(value) != true)) {
                    this.alarmTimeField = value;
                    this.RaisePropertyChanged("alarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int highLimit {
            get {
                return this.highLimitField;
            }
            set {
                if ((this.highLimitField.Equals(value) != true)) {
                    this.highLimitField = value;
                    this.RaisePropertyChanged("highLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lowLimit {
            get {
                return this.lowLimitField;
            }
            set {
                if ((this.lowLimitField.Equals(value) != true)) {
                    this.lowLimitField = value;
                    this.RaisePropertyChanged("lowLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tagID {
            get {
                return this.tagIDField;
            }
            set {
                if ((object.ReferenceEquals(this.tagIDField, value) != true)) {
                    this.tagIDField = value;
                    this.RaisePropertyChanged("tagID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="readType", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    public enum readType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUTO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MANUAL = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="scanType", Namespace="http://schemas.datacontract.org/2004/07/ScadaModel")]
    public enum scanType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ON = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OFF = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.I_RTU")]
    public interface I_RTU {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_RTU/sendDataToSvc", ReplyAction="http://tempuri.org/I_RTU/sendDataToSvcResponse")]
        void sendDataToSvc(string address, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_RTU/sendDataToSvc", ReplyAction="http://tempuri.org/I_RTU/sendDataToSvcResponse")]
        System.Threading.Tasks.Task sendDataToSvcAsync(string address, int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_RTU/register_RTU", ReplyAction="http://tempuri.org/I_RTU/register_RTUResponse")]
        bool register_RTU(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_RTU/register_RTU", ReplyAction="http://tempuri.org/I_RTU/register_RTUResponse")]
        System.Threading.Tasks.Task<bool> register_RTUAsync(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_RTU/getAvailableAddresses", ReplyAction="http://tempuri.org/I_RTU/getAvailableAddressesResponse")]
        string getAvailableAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_RTU/getAvailableAddresses", ReplyAction="http://tempuri.org/I_RTU/getAvailableAddressesResponse")]
        System.Threading.Tasks.Task<string> getAvailableAddressesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_RTUChannel : Trending.ServiceReference1.I_RTU, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I_RTUClient : System.ServiceModel.ClientBase<Trending.ServiceReference1.I_RTU>, Trending.ServiceReference1.I_RTU {
        
        public I_RTUClient() {
        }
        
        public I_RTUClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public I_RTUClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_RTUClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_RTUClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void sendDataToSvc(string address, int value) {
            base.Channel.sendDataToSvc(address, value);
        }
        
        public System.Threading.Tasks.Task sendDataToSvcAsync(string address, int value) {
            return base.Channel.sendDataToSvcAsync(address, value);
        }
        
        public bool register_RTU(string address) {
            return base.Channel.register_RTU(address);
        }
        
        public System.Threading.Tasks.Task<bool> register_RTUAsync(string address) {
            return base.Channel.register_RTUAsync(address);
        }
        
        public string getAvailableAddresses() {
            return base.Channel.getAvailableAddresses();
        }
        
        public System.Threading.Tasks.Task<string> getAvailableAddressesAsync() {
            return base.Channel.getAvailableAddressesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.I_DB_Manager")]
    public interface I_DB_Manager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/addTag", ReplyAction="http://tempuri.org/I_DB_Manager/addTagResponse")]
        bool addTag(Trending.ServiceReference1.Tag tag, string driver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/addTag", ReplyAction="http://tempuri.org/I_DB_Manager/addTagResponse")]
        System.Threading.Tasks.Task<bool> addTagAsync(Trending.ServiceReference1.Tag tag, string driver);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/removeTag", ReplyAction="http://tempuri.org/I_DB_Manager/removeTagResponse")]
        bool removeTag(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/removeTag", ReplyAction="http://tempuri.org/I_DB_Manager/removeTagResponse")]
        System.Threading.Tasks.Task<bool> removeTagAsync(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/addAlarm", ReplyAction="http://tempuri.org/I_DB_Manager/addAlarmResponse")]
        bool addAlarm(Trending.ServiceReference1.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/addAlarm", ReplyAction="http://tempuri.org/I_DB_Manager/addAlarmResponse")]
        System.Threading.Tasks.Task<bool> addAlarmAsync(Trending.ServiceReference1.Alarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/removeAlarm", ReplyAction="http://tempuri.org/I_DB_Manager/removeAlarmResponse")]
        bool removeAlarm(string tagID, string alarmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/removeAlarm", ReplyAction="http://tempuri.org/I_DB_Manager/removeAlarmResponse")]
        System.Threading.Tasks.Task<bool> removeAlarmAsync(string tagID, string alarmID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/activateScan", ReplyAction="http://tempuri.org/I_DB_Manager/activateScanResponse")]
        void activateScan(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/activateScan", ReplyAction="http://tempuri.org/I_DB_Manager/activateScanResponse")]
        System.Threading.Tasks.Task activateScanAsync(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/deactivateScan", ReplyAction="http://tempuri.org/I_DB_Manager/deactivateScanResponse")]
        void deactivateScan(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/deactivateScan", ReplyAction="http://tempuri.org/I_DB_Manager/deactivateScanResponse")]
        System.Threading.Tasks.Task deactivateScanAsync(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getRTDAddresses", ReplyAction="http://tempuri.org/I_DB_Manager/getRTDAddressesResponse")]
        string[] getRTDAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getRTDAddresses", ReplyAction="http://tempuri.org/I_DB_Manager/getRTDAddressesResponse")]
        System.Threading.Tasks.Task<string[]> getRTDAddressesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getSDAvailableAddr", ReplyAction="http://tempuri.org/I_DB_Manager/getSDAvailableAddrResponse")]
        string[] getSDAvailableAddr();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getSDAvailableAddr", ReplyAction="http://tempuri.org/I_DB_Manager/getSDAvailableAddrResponse")]
        System.Threading.Tasks.Task<string[]> getSDAvailableAddrAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getTags", ReplyAction="http://tempuri.org/I_DB_Manager/getTagsResponse")]
        Trending.ServiceReference1.Tag[] getTags();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getTags", ReplyAction="http://tempuri.org/I_DB_Manager/getTagsResponse")]
        System.Threading.Tasks.Task<Trending.ServiceReference1.Tag[]> getTagsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getTagForEditing", ReplyAction="http://tempuri.org/I_DB_Manager/getTagForEditingResponse")]
        Trending.ServiceReference1.Tag getTagForEditing(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getTagForEditing", ReplyAction="http://tempuri.org/I_DB_Manager/getTagForEditingResponse")]
        System.Threading.Tasks.Task<Trending.ServiceReference1.Tag> getTagForEditingAsync(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getAlarms", ReplyAction="http://tempuri.org/I_DB_Manager/getAlarmsResponse")]
        Trending.ServiceReference1.Alarm[] getAlarms(string tagID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_DB_Manager/getAlarms", ReplyAction="http://tempuri.org/I_DB_Manager/getAlarmsResponse")]
        System.Threading.Tasks.Task<Trending.ServiceReference1.Alarm[]> getAlarmsAsync(string tagID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_DB_ManagerChannel : Trending.ServiceReference1.I_DB_Manager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I_DB_ManagerClient : System.ServiceModel.ClientBase<Trending.ServiceReference1.I_DB_Manager>, Trending.ServiceReference1.I_DB_Manager {
        
        public I_DB_ManagerClient() {
        }
        
        public I_DB_ManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public I_DB_ManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_DB_ManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public I_DB_ManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addTag(Trending.ServiceReference1.Tag tag, string driver) {
            return base.Channel.addTag(tag, driver);
        }
        
        public System.Threading.Tasks.Task<bool> addTagAsync(Trending.ServiceReference1.Tag tag, string driver) {
            return base.Channel.addTagAsync(tag, driver);
        }
        
        public bool removeTag(string tagID) {
            return base.Channel.removeTag(tagID);
        }
        
        public System.Threading.Tasks.Task<bool> removeTagAsync(string tagID) {
            return base.Channel.removeTagAsync(tagID);
        }
        
        public bool addAlarm(Trending.ServiceReference1.Alarm alarm) {
            return base.Channel.addAlarm(alarm);
        }
        
        public System.Threading.Tasks.Task<bool> addAlarmAsync(Trending.ServiceReference1.Alarm alarm) {
            return base.Channel.addAlarmAsync(alarm);
        }
        
        public bool removeAlarm(string tagID, string alarmID) {
            return base.Channel.removeAlarm(tagID, alarmID);
        }
        
        public System.Threading.Tasks.Task<bool> removeAlarmAsync(string tagID, string alarmID) {
            return base.Channel.removeAlarmAsync(tagID, alarmID);
        }
        
        public void activateScan(string tagID) {
            base.Channel.activateScan(tagID);
        }
        
        public System.Threading.Tasks.Task activateScanAsync(string tagID) {
            return base.Channel.activateScanAsync(tagID);
        }
        
        public void deactivateScan(string tagID) {
            base.Channel.deactivateScan(tagID);
        }
        
        public System.Threading.Tasks.Task deactivateScanAsync(string tagID) {
            return base.Channel.deactivateScanAsync(tagID);
        }
        
        public string[] getRTDAddresses() {
            return base.Channel.getRTDAddresses();
        }
        
        public System.Threading.Tasks.Task<string[]> getRTDAddressesAsync() {
            return base.Channel.getRTDAddressesAsync();
        }
        
        public string[] getSDAvailableAddr() {
            return base.Channel.getSDAvailableAddr();
        }
        
        public System.Threading.Tasks.Task<string[]> getSDAvailableAddrAsync() {
            return base.Channel.getSDAvailableAddrAsync();
        }
        
        public Trending.ServiceReference1.Tag[] getTags() {
            return base.Channel.getTags();
        }
        
        public System.Threading.Tasks.Task<Trending.ServiceReference1.Tag[]> getTagsAsync() {
            return base.Channel.getTagsAsync();
        }
        
        public Trending.ServiceReference1.Tag getTagForEditing(string tagID) {
            return base.Channel.getTagForEditing(tagID);
        }
        
        public System.Threading.Tasks.Task<Trending.ServiceReference1.Tag> getTagForEditingAsync(string tagID) {
            return base.Channel.getTagForEditingAsync(tagID);
        }
        
        public Trending.ServiceReference1.Alarm[] getAlarms(string tagID) {
            return base.Channel.getAlarms(tagID);
        }
        
        public System.Threading.Tasks.Task<Trending.ServiceReference1.Alarm[]> getAlarmsAsync(string tagID) {
            return base.Channel.getAlarmsAsync(tagID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.I_Trending", CallbackContract=typeof(Trending.ServiceReference1.I_TrendingCallback))]
    public interface I_Trending {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Trending/initTrending", ReplyAction="http://tempuri.org/I_Trending/initTrendingResponse")]
        void initTrending();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Trending/initTrending", ReplyAction="http://tempuri.org/I_Trending/initTrendingResponse")]
        System.Threading.Tasks.Task initTrendingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_TrendingCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/I_Trending/addNewValue")]
        void addNewValue(string tagID, int value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_TrendingChannel : Trending.ServiceReference1.I_Trending, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I_TrendingClient : System.ServiceModel.DuplexClientBase<Trending.ServiceReference1.I_Trending>, Trending.ServiceReference1.I_Trending {
        
        public I_TrendingClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public I_TrendingClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public I_TrendingClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public I_TrendingClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public I_TrendingClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void initTrending() {
            base.Channel.initTrending();
        }
        
        public System.Threading.Tasks.Task initTrendingAsync() {
            return base.Channel.initTrendingAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.I_Alarm_Display", CallbackContract=typeof(Trending.ServiceReference1.I_Alarm_DisplayCallback))]
    public interface I_Alarm_Display {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Alarm_Display/initAlarmDisplay", ReplyAction="http://tempuri.org/I_Alarm_Display/initAlarmDisplayResponse")]
        void initAlarmDisplay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/I_Alarm_Display/initAlarmDisplay", ReplyAction="http://tempuri.org/I_Alarm_Display/initAlarmDisplayResponse")]
        System.Threading.Tasks.Task initAlarmDisplayAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_Alarm_DisplayCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/I_Alarm_Display/logAlarmToConsole")]
        void logAlarmToConsole(Trending.ServiceReference1.Alarm alarm);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface I_Alarm_DisplayChannel : Trending.ServiceReference1.I_Alarm_Display, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class I_Alarm_DisplayClient : System.ServiceModel.DuplexClientBase<Trending.ServiceReference1.I_Alarm_Display>, Trending.ServiceReference1.I_Alarm_Display {
        
        public I_Alarm_DisplayClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public I_Alarm_DisplayClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public I_Alarm_DisplayClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public I_Alarm_DisplayClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public I_Alarm_DisplayClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void initAlarmDisplay() {
            base.Channel.initAlarmDisplay();
        }
        
        public System.Threading.Tasks.Task initAlarmDisplayAsync() {
            return base.Channel.initAlarmDisplayAsync();
        }
    }
}
